# ุฃูุงูุฑ ุชุทุจูู ุฅุตูุงุญ ุงูุชุจููุจุงุช ุนูู ุงูุฎุงุฏู

# ูู ูุฌูุฏ /root/ai-translator ุดุบูู ูุฐู ุงูุฃูุงูุฑ:

# 1. ุฅูุดุงุก ููู ุงูุฅุตูุงุญ ูุจุงุดุฑุฉ
cat > apply_tabs_fix.sh << 'EOF'
#!/bin/bash

echo "๐ง ุชุทุจูู ุฅุตูุงุญ ุงูุชุจููุจุงุช..."

cd /root/ai-translator

# ุฅูุดุงุก ููู JavaScript ููุฅุตูุงุญ
cat > static/js/tabs-fix.js << 'JSEOF'
document.addEventListener('DOMContentLoaded', function() {
    console.log('Tabs fix loading...');
    
    function fixMainTabs() {
        const mainNavLinks = document.querySelectorAll('.sidebar a, .nav-link, .main-nav a, [data-tab]');
        
        mainNavLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                mainNavLinks.forEach(nav => nav.classList.remove('active'));
                this.classList.add('active');
                console.log('Main tab clicked:', this.textContent.trim());
            });
        });
    }
    
    function fixSubTabs() {
        const tabTriggers = document.querySelectorAll('[data-bs-toggle="tab"], [data-toggle="tab"], .nav-tabs .nav-link');
        
        tabTriggers.forEach(trigger => {
            trigger.addEventListener('click', function(e) {
                e.preventDefault();
                
                const target = this.getAttribute('href') || this.getAttribute('data-bs-target') || this.getAttribute('data-target');
                
                if (target) {
                    const tabGroup = this.closest('.nav-tabs, .tab-nav');
                    if (tabGroup) {
                        const groupTabs = tabGroup.querySelectorAll('.nav-link, .tab-item');
                        groupTabs.forEach(tab => tab.classList.remove('active'));
                        
                        const tabPanes = document.querySelectorAll('.tab-pane, .tab-content');
                        tabPanes.forEach(pane => {
                            pane.classList.remove('active', 'show');
                            pane.style.display = 'none';
                        });
                    }
                    
                    this.classList.add('active');
                    
                    const targetPane = document.querySelector(target);
                    if (targetPane) {
                        targetPane.classList.add('active', 'show');
                        targetPane.style.display = 'block';
                    }
                    
                    console.log('Sub tab activated:', target);
                }
            });
        });
    }
    
    setTimeout(() => {
        fixMainTabs();
        fixSubTabs();
        console.log('All tabs fixes applied');
    }, 500);
});

window.refreshTabs = function() {
    setTimeout(() => {
        document.dispatchEvent(new Event('DOMContentLoaded'));
    }, 100);
};
JSEOF

chmod 644 static/js/tabs-fix.js

# ุฅุถุงูุฉ ุงูุณูุฑุจุช ูููุงูุจ ุฅุฐุง ูู ููู ููุฌูุฏุงู
if ! grep -q "tabs-fix.js" templates/layout.html; then
    sed -i '/file-browser\.js/a\    <script src="{{ url_for('"'"'static'"'"', filename='"'"'js/tabs-fix.js'"'"') }}"></script>' templates/layout.html
    echo "โ ุชู ุฅุถุงูุฉ ุงูุณูุฑุจุช ุฅูู ุงููุงูุจ"
fi

# ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุฏูุฉ
systemctl restart ai-translator

sleep 5

if systemctl is-active --quiet ai-translator; then
    echo "โ ุชู ุชุทุจูู ุฅุตูุงุญ ุงูุชุจููุจุงุช ุจูุฌุงุญ"
    echo "ุญุฏูุซ ุตูุญุฉ ุงููุชุตูุญ ูุฑุคูุฉ ุงูุชุญุณููุงุช"
else
    echo "โ ูุดููุฉ ูู ุงูุฎุฏูุฉ"
    systemctl status ai-translator --no-pager -l
fi
EOF

# 2. ุฅุนุทุงุก ุตูุงุญูุงุช ุงูุชูููุฐ
chmod +x apply_tabs_fix.sh

# 3. ุชุดุบูู ุงูุฅุตูุงุญ
./apply_tabs_fix.sh